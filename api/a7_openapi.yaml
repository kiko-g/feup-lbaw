openapi: 3.0.0
info:
  description: 'Web Resources Specification (A7) for TechCouncil. The goal is to create the API documentation to be visualized and tested in SwaggerHub.' #TODO: !! rever isto
  version: "1.0.0"
  title: 'Tech Council LBAW'
  contact:
    email: apiteam@swagger.io #TODO: mudar

externalDocs:
  description: Full A7 artifact info here
  url: ''#TODO: https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#a7 ...
  
servers:
  # Added by API Auto Mocking Plugin
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/lbaw32/TechCouncil/1.0.0
  - description: 'Production server'
    url: https://virtserver.swaggerhub.com/ffriande/TechCouncil/1.0.0
  - url: 'http://lbaw2132-piu.lbaw-prod.fe.up.pt' 

tags:
  - name: 'M01: Authentication'
    description: ''
  - name: 'M02: Individual Profile'
    description: ''
  - name: 'M03: Contents'
    description: ''
  - name: 'M04: Moderation'
    description: ''
  - name: 'M05: Notifications'
    description: ''
  - name: 'M06: Static Pages'
    description: ''
  
paths:
  /login:
    get:
      operationId: R101
      summary: 'R101: Login Form'
      description: 'Provide login form. Access: PUB'
      tags:
        - 'M01: Authentication'
      responses:
        '200':
          description: 'Ok. Show [UI04](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui04-login)'
    post:
      operationId: R102
      summary: 'R102: Login Action'
      description: 'Processes the login form submission. Access: PUB'
      tags:
        - 'M01: Authentication'
 
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:          
                  type: string
                password:    
                  type: string
              required:
                - email
                - password
 
      responses:
        '302':
          description: 'Redirect after processing the login credentials.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to user profile.'
                  value: '/home'
                302Error:
                  description: 'Failed authentication. Redirect to login form.'
                  value: '/login'
 
  /logout:

    post:
      operationId: R103
      summary: 'R103: Logout Action'
      description: 'Logout the current authenticated user. Access: USR, ADM'
      tags:
        - 'M01: Authentication'
      responses:
        '302':
          description: 'Redirect after processing logout.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful logout. Redirect to home.'
                  value: '/login'

  /register:
    get:
      operationId: R104
      summary: 'R104: Register Form'
      description: 'Provide new user registration form. Access: PUB'
      tags:
        - 'M01: Authentication'
      responses:
        '200':
          description: 'Ok. Show [UI05](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui05-register)'

    post:
      operationId: R105
      summary: 'R105: Register Action'
      description: 'Processes the new user registration form submission. Access: PUB'
      tags:
        - 'M01: Authentication'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                email:
                  type: string
                username:
                  type: string
                password:
                  type: string
                #picture:
                 # type: string
                  #format: binary
              required:
                - email
                - username
                - password

      responses:
        '302': #TODO: corrigir codes
          description: 'Redirect after processing the new user information.'
          headers:
            Location:
              schema:
                type: string
              examples:
                302Success:
                  description: 'Successful authentication. Redirect to main page.'
                  value: '/home'
                302Failure:
                  description: 'Failed authentication. Redirect to register form.'
                  value: '/register'

  /users/{user_id}:
    get:
      operationId: R201
      summary: 'R201: Profile Page'
      description: 'Present both the main content related to a user, and the account information. Access: PUB'
      tags:
        - 'M02: Individual Profile'
      parameters:
        - name: user_id
          in: path
          description: Provided an unique id of a user, the main content related to the user will be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok. Show [UI10](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui10-profile)'

  /question/{id}:
    get:
      operationId: R301
      summary: 'R301: Question page'
      description: 'Present a specific question page. Access: PUB'
      tags:
        - 'M03: Contents'
      parameters:
        - name: id
          in: path
          description: Provided an unique id of a question, the main content related to the question will be fetched.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: 'Ok. Show [UI08](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui08-question-page)'

  /api/delete/content/{id}:
    delete:
      operationId: R302
      summary: 'R302: Delete content'
      description: 'Delete content. Access: MOD, OWN'
      tags:
        - 'M03: Contents'

      parameters:
        - in: path
          name: id
          description: Content id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Content deleted.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  content_id:
                    type: integer
                    description: The deleted content id.

  /about:
    get:
      operationId: R601
      summary: 'R601: About page'
      description: 'Show about page. Access: PUB'
      tags:
        - 'M06: Static Pages'
      responses:
        '200':
          description: 'Ok. Show [UI02](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui02-about)'
  /faq:
    get:
      operationId: R602
      summary: 'R602: FAQ Page'
      description: 'Show FAQ page. Access: PUB'
      tags:
        - 'M06: Static Pages'
      responses:
        '200':
          description: 'Ok. Show [UI03](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui03-faq)'

  /error:
    get:
      operationId: R603
      summary: 'R603: Error page'
      description: 'Error page on bad request. Access: PUB'
      tags:
        - 'M06: Static Pages'
      responses:
        '200':
          description: 'Ok. Show [UI14](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui14-404)'

  /moderator:
    get:
      operationId: R401
      summary: 'R401: Moderator page'
      description: 'Show moderation area. Access: MOD'
      tags:
        - 'M04: Moderation'
      responses:
        '200':
          description: 'Ok. Show [UI13](https://git.fe.up.pt/lbaw/lbaw2021/lbaw2132/-/wikis/er#ui13-user-moderation)'

  /api/ban:
    post:
      operationId: R402
      summary: 'R402: Ban user'
      description: 'Ban a user. Access: MOD'
      tags:
        - 'M04: Moderation'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name

      responses:
        '200':
          description: 'Ok. User banned.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: The banned user name.

  /api/delete/tag/{id}:
    delete:
      operationId: R403
      summary: 'R403: Delete tag'
      description: 'Delete tag. Access: MOD'
      tags:
        - 'M04: Moderation'

      parameters:
        - in: path
          name: id
          description: Tag id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Tag deleted.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tag_id:
                    type: integer
                    description: The deleted tag id.

  /api/edit/tag:
    patch:
      operationId: R404
      summary: 'R404: Edit tag'
      description: 'Edit tag. Access: MOD'
      tags:
        - 'M04: Moderation'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  description: Updated tag name
                description:
                  type: string
                  description: Updated tag description
              required:
                - id
                - name

      responses:
        '200':
          description: 'Ok. Tag deleted.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tag_id:
                    type: integer
                    description: The deleted tag id.

  /api/remove/tag:  
    delete:
      operationId: R405
      summary: 'R405: Remove tag'
      description: 'Remove tag from question. Access: MOD'
      tags:
        - 'M04: Moderation'

      parameters:
        - in: query
          name: tag_id
          description: Tag id
          schema:
            type: integer
          required: true
        - in: query
          name: question_id
          description: Question id
          schema:
            type: integer
          required: true

      responses:
        '200':
          description: 'Ok. Tag removed from Question.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tag_id:
                    type: integer
                    description: The remnoved tag id.
                  question_id:
                    type: integer
                    description: The question id tag was removed from.

  /api/add/tag:
    post:
      operationId: R406
      summary: 'R406: Add tag'
      description: 'Add tag to question. Access: MOD'
      tags:
        - 'M04: Moderation'

      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                id:
                  type: integer
                name:
                  type: string
                  description: Updated tag name
                description:
                  type: string
                  description: Updated tag description
              required:
                - id
                - name

      responses:
        '200':
          description: 'Ok. Tag associated to Question.'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tag_id:
                    type: integer
                    description: The question id tag was added to.

  /api/user_reports:
    get:
      operationId: R407
      summary: 'R407: User reports'
      description: 'Get user reports and return result ad JSON. Access: MOD'
      tags:
        - 'M04: Moderation'
      parameters:
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: solved
          description: States if the report is solved
          schema:
            type: boolean
          required: false

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    description:
                      type: string
                    solved:
                      type: boolean
                    reporter_id:
                      type: integer
                    solver_id:
                      type: integer
                    user_id:
                      type: integer
                example:
                  - id: 10
                    description: Bad behaviour
                    solved: false
                    reporter_id: 3
                    solver_id: 1
                    user_id: null
                  - id: 14
                    description: Good Moaning
                    solved: true
                    reporter_id: 3
                    solver_id: 1
                    user_id: 2

  /api/content_reports:
    get:
      operationId: R408
      summary: 'R408: Content reports'
      description: 'Get content reports and return result ad JSON. Access: MOD'
      tags:
        - 'M04: Moderation'
      parameters:
        - in: query
          name: query
          description: String to use for full-text search
          schema:
            type: string
          required: false
        - in: query
          name: solved
          description: States if the report is solved
          schema:
            type: boolean
          required: false

      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    description:
                      type: string
                    solved:
                      type: boolean
                    reporter_id:
                      type: integer
                    solver_id:
                      type: integer
                    user_id:
                      type: integer
                example:
                  - id: 9
                    description: Is not useful
                    solved: false
                    reporter_id: 3
                    solver_id: 1
                    content_id: 5
                  - id: 11
                    description: Did not learn anything
                    solved: true
                    reporter_id: 3
                    solver_id: 1
                    content_id: 5

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        password:
          type: string
      xml:
        name: User
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      xml:
        name: Tag
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
        type:
          type: string
        message:
          type: string
  requestBodies:
    UserArray:
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
      description: List of user object
      required: true
  securitySchemes:
    petstore_auth:
      type: oauth2
      flows:
        implicit:
          authorizationUrl: 'http://petstore.swagger.io/oauth/dialog'
          scopes:
            'write:pets': modify pets in your account
            'read:pets': read your pets
    api_key:
      type: apiKey
      name: api_key
      in: header